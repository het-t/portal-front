{"version":3,"file":"js/398.eda02c05.js","mappings":"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","sources":["webpack://portal/./src/components/TableMain.vue","webpack://portal/./src/components/TableMain.vue?1bc3","webpack://portal/./src/components/TheSetting.vue","webpack://portal/./src/components/ToggleSwitch.vue","webpack://portal/./src/components/ToggleSwitch.vue?fbb7","webpack://portal/./src/components/SettingsWaNotification.vue","webpack://portal/./src/components/SettingsWaNotification.vue?00d7","webpack://portal/./src/components/TheSetting.vue?7de0"],"sourcesContent":["<template>\r\n        <div class=\"card\">\r\n\r\n            <div class=\"mr16 ml16 mt16\">\r\n                <div class=\"table-main-head ml16 mb16\">\r\n                    <slot name=\"tableHeader\"></slot>\r\n                </div>\r\n                <table>\r\n                    <thead>\r\n                        <slot name=\"thead\"></slot>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        <slot name=\"tbody\"></slot>\r\n                    </tbody>\r\n                </table>\r\n                \r\n                <slot></slot>\r\n            </div>\r\n        </div>\r\n\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: 'TableMain',\r\n    }\r\n</script>\r\n\r\n<style>\r\n.table-main-head .icon {\r\n    width: 16px;\r\n    height: 16px;\r\n    border: solid 1px #c2c2c2;\r\n    border-radius: 100%;\r\n    padding: 4px;\r\n    cursor: pointer;\r\n}\r\n.table-main-head h2 {\r\n    font-weight: 300;\r\n}\r\n</style>","import { render } from \"./TableMain.vue?vue&type=template&id=c5e7c7ca\"\nimport script from \"./TableMain.vue?vue&type=script&lang=js\"\nexport * from \"./TableMain.vue?vue&type=script&lang=js\"\n\nimport \"./TableMain.vue?vue&type=style&index=0&id=c5e7c7ca&lang=css\"\n\nimport exportComponent from \"D:\\\\portal\\\\frontend\\\\portal\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div class=\"setting-container\">\r\n        <div class=\"card\">\r\n            <slot name=\"table-head\"></slot>\r\n            \r\n            <form id=\"setting-form\" class=\"pr24 pl24 pt16 pb16\">\r\n                <template v-for=\"(settingObj, index) in settingsForm\" :key=\"index\">\r\n                        <div v-if=\"settingObj.displayOrder == 1\" class=\"hr\"></div>\r\n\r\n                        <toggle-switch class=\"grid\" @switchToggled=\"save($event)\" v-if=\"settingObj.type == 'toggle'\" :name=\"new String(settingObj.setting)\" :value=\"settingObj.value\">\r\n                            <template #label>{{ settingObj.meta?.label }}</template>\r\n                        </toggle-switch>\r\n\r\n                        <div v-if=\"settingObj.type != 'toggle'\" class=\"grid mt16\">\r\n                            <label style=\"width: 150px;\" :title=\"settingObj.meta?.tooltip\" :for=\"settingObj.setting\" v-if=\"settingObj.meta.label\">\r\n                                {{ settingObj.meta?.label }}\r\n                            </label>\r\n\r\n                            <input :size=\"settingObj.value.length\" v-model=\"values[settingObj.setting]\" v-if=\"settingObj.type == 'input'\" :name=\"settingObj.setting\" :id=\"settingObj.setting\" :type=\"settingObj.meta?.type\">\r\n\r\n                            <div class=\"flex ml8\">\r\n                                <font-awesome-icon title=\"send OTP\" v-if=\"settingObj?.meta?.requireAuth == true\" @click.prevent=\"getOtp({'key': settingObj.setting, 'value': values[settingObj.setting]}, settingObj.meta.getOtp)\" :icon=\"['solid', 'save']\" class=\"save-btn\"></font-awesome-icon>\r\n                                <font-awesome-icon v-else @click.prevent=\"save({'key': settingObj.setting, 'value': values[settingObj.setting]})\" class=\"save-btn\" :icon=\"['solid', 'save']\"></font-awesome-icon>\r\n                            </div>\r\n\r\n                            <div v-if=\"settingObj.meta.requireAuth == true && otpFor == settingObj.setting\" style=\"display: flex; gap: 8px; align-items: center;\" class=\"mt16\">\r\n                                <input v-model=\"otp\" type=\"text\" placeholder=\"OTP\">\r\n                                <font-awesome-icon @click.prevent=\"verifyOtp({'otp': otp}, settingObj.meta.verify)\" class=\"save-btn\" :icon=\"['fas', 'arrow-up-right-from-square']\"></font-awesome-icon>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div v-if=\"settingObj.meta.component\" style=\"border-left: solid 6px #e5e5e5;\">\r\n                            <component :is=\"settingObj.meta.component\" :settingObj=\"settingObj\"></component>\r\n                        </div>\r\n                </template>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { settings } from '@/api/index.js'\r\nimport makePostReq from '../api/makePostReq'\r\nimport ToggleSwitch from './ToggleSwitch.vue'\r\nimport SettingsWaNotification from './SettingsWaNotification.vue'\r\n\r\nexport default {\r\n    components: { ToggleSwitch, SettingsWaNotification }, \r\n    props: ['pageId'],\r\n    name: 'TheSetting',\r\n    data() {\r\n        return {\r\n            disabled: false,\r\n            settingsForm: [],\r\n            originalFormData: [],\r\n            values: {},\r\n            otpFor: '',\r\n            otp: ''\r\n        }\r\n    },\r\n    computed: {\r\n        formCount() {\r\n            let count = 0;\r\n            let prevFormId = -1\r\n            for(let obj of this.settingsForm) {\r\n                if (obj.formId != prevFormId) {\r\n                    count++\r\n                    prevFormId = obj.formId\r\n                }\r\n            }\r\n            return count\r\n        },\r\n    },\r\n    methods: {\r\n        btnVisibility(formId) {\r\n            let count = 0\r\n            for(let obj of this.settingsForm) {\r\n                if (obj.formId == formId) count++\r\n            }\r\n            return count\r\n        },\r\n        save(arg) {\r\n            makePostReq('/u/api/settings/', arg)\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n            .finally(() => {\r\n                this.getSettings()\r\n            })\r\n        },\r\n        getOtp(args, forOtp) {\r\n            this.otpFor = args.key\r\n\r\n            let getOtp = settings\r\n            \r\n            forOtp.split('.').forEach((prop) => {\r\n                getOtp = getOtp[prop]\r\n            })\r\n\r\n\r\n            getOtp(args)\r\n            .then(() => {\r\n                this.$toast.success('OTP will be sent to your WhatsApp in around 60sec')\r\n            })\r\n            .catch((err) => {\r\n                this.$toast.error(`Oops! We can't perform this action right now`)\r\n                console.log(err)\r\n            })\r\n        },\r\n        verifyOtp(args, forVerification) {\r\n            let verifyOtp = settings\r\n\r\n            forVerification.split('.').forEach((prop) => {\r\n                verifyOtp = verifyOtp[prop]\r\n            })\r\n\r\n            verifyOtp(args)\r\n            .then(() => {\r\n                this.$toast.success('WhatsApp number updated')\r\n            })\r\n            .catch(err => {\r\n                this.$toast.error(`Oops! We can't perform this action right now`)\r\n                console.log(err)\r\n            }) \r\n            .finally(() => {\r\n                this.otpFor = ''\r\n                this.otp = ''\r\n                this.getSettings()\r\n            })\r\n        },\r\n        cancel() {\r\n            this.email = '',\r\n            this.password = ''\r\n        },\r\n        getSettings() {\r\n            settings.get({\r\n                pageId: this.pageId\r\n            })\r\n            .then(res => {\r\n                this.settingsForm = res.data\r\n\r\n                let p = {}\r\n                for(let settingObj of res.data) {\r\n                    p[settingObj.setting] = settingObj.value == null ? '' : settingObj.value\r\n                    \r\n                }\r\n\r\n                this.values = p\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getSettings()\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n@import \"../assets/stylesheet/skeleton-card.css\";\r\n\r\n.flex {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 4px;\r\n    align-items: flex-start;\r\n}\r\n.qr-skeleton {\r\n    width: 250px;\r\n    height: 250px;\r\n    animation: pulse-bg 1s infinite;\r\n    margin-top: 8px;\r\n}\r\n.save-btn {\r\n    height: 22px;\r\n    cursor: pointer;\r\n}\r\n\r\n.grid {\r\n    width: auto;\r\n    display: grid;\r\n    grid-template-columns: 200px auto auto;\r\n    align-items: center;\r\n}\r\n.grid input {\r\n    width: auto !important;\r\n}\r\n.setting-container .hr:not(:nth-child(1)) {\r\n    height: 1px;\r\n    width: 100%;\r\n    margin: 16px 0;\r\n}\r\n.toggle__button {\r\n    vertical-align: middle;\r\n    user-select: none;\r\n    cursor: pointer;\r\n}\r\n.toggle__button input[type=\"checkbox\"] {\r\n    opacity: 0;\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 1px;\r\n}\r\n.toggle__button .toggle__switch {\r\n    display:inline-block;\r\n    height:12px;\r\n    border-radius:6px;\r\n    width:40px;\r\n    background: #BFCBD9;\r\n    box-shadow: inset 0 0 1px #BFCBD9;\r\n    position:relative;\r\n    margin-left: 10px;\r\n    transition: all .25s;\r\n}\r\n\r\n.toggle__button .toggle__switch::after, \r\n.toggle__button .toggle__switch::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    display: block;\r\n    height: 18px;\r\n    width: 18px;\r\n    border-radius: 50%;\r\n    left: 0;\r\n    top: -3px;\r\n    transform: translateX(0);\r\n    transition: all .25s cubic-bezier(.5, -.6, .5, 1.6);\r\n}\r\n\r\n.toggle__button .toggle__switch::after {\r\n    background: #4D4D4D;\r\n    box-shadow: 0 0 1px #666;\r\n}\r\n.toggle__button .toggle__switch::before {\r\n    background: #4D4D4D;\r\n    box-shadow: 0 0 0 3px rgba(0,0,0,0.1);\r\n    opacity:0;\r\n}\r\n</style>","<template>\r\n    <div>\r\n        <slot name=\"label\"></slot>\r\n\r\n        <label class=\"switch\">\r\n            <input :title=\"name\" \r\n                :id=\"name\" \r\n                :name=\"name\" \r\n                :value=\"currentState\" \r\n                type=\"checkbox\" \r\n                v-model=\"currentState\" \r\n                @click=\"toggleCheckbox\"\r\n            >\r\n            <div class=\"slider round\"></div>\r\n        </label>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'ToggleSwitch',\r\n    data() {\r\n        return {\r\n            currentState: true \r\n        }\r\n    },\r\n    props: {\r\n        value:{\r\n            type: String,\r\n            required: true\r\n        },\r\n        name: {\r\n            type: String,\r\n            required: true\r\n        }\r\n    },\r\n    methods: {\r\n        toggleCheckbox() {\r\n            this.currentState == true ? this.currentState = false : this.currentState = true\r\n            this.$emit('switchToggled', {'key': this.name, 'value': this.currentState})\r\n        }\r\n    },\r\n    mounted() {\r\n        this.value == 'true' ? this.currentState = true : this.currentState = false\r\n    }\r\n};\r\n</script>\r\n\r\n<style>\r\n    @import '../assets/stylesheet/toggle-switch.css';\r\n</style>","import { render } from \"./ToggleSwitch.vue?vue&type=template&id=30354edc\"\nimport script from \"./ToggleSwitch.vue?vue&type=script&lang=js\"\nexport * from \"./ToggleSwitch.vue?vue&type=script&lang=js\"\n\nimport \"./ToggleSwitch.vue?vue&type=style&index=0&id=30354edc&lang=css\"\n\nimport exportComponent from \"D:\\\\portal\\\\frontend\\\\portal\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div v-if=\"settingObj.setting == 2\" style=\"height: fit-content;\" class=\"ml16\">\r\n        <div v-if=\"settingObj.value == 'true'\" class=\"mt16\">\r\n            <button v-if=\"ntfPopupVisible == false\" class=\"button neutral mr8\" @click=\"getQr\">\r\n                <font-awesome-icon :icon=\"['fas', 'plus']\"></font-awesome-icon>\r\n                <span class=\"ml8\">authenticate</span>\r\n            </button>\r\n\r\n            <button v-if=\"ntfPopupVisible == false\" class=\"button neutral\" @click=\"ntfPopupVisible = true\">\r\n                <font-awesome-icon :icon=\"['fas', 'plus']\"></font-awesome-icon>\r\n                <span class=\"ml8\">new notification</span>\r\n            </button>\r\n\r\n            <div v-else>\r\n                <div style=\"display: flex;\" class=\"mt8\">\r\n                    <input @input=\"text.user = ''; text.client = '';\" v-model=\"custom\" style=\"cursor: pointer; width: auto; margin: 0 8px 0 0;\" type=\"checkbox\" name=\"custom-rule\" id=\"custom-rule-check\">\r\n                    <label for=\"custom-rule-check\">Custom rule</label>\r\n                </div>\r\n\r\n                <div v-if=\"!custom\" class=\"ntf-grid\">\r\n                    <label for=\"user\">User</label>\r\n                    <select v-model=\"text.user\" name=\"user\" id=\"user\">\r\n                        <option value=\"all\">All</option>\r\n                        <option value=\"None\">None</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div v-if=\"!custom\" class=\"ntf-grid\">\r\n                    <label for=\"client\">Client</label>\r\n                    <select v-model=\"text.client\" name=\"client\" id=\"client\">\r\n                        <option value=\"all\">All</option>\r\n                        <option value=\"None\">None</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div class=\"autocomplete mt16\" v-if=\"custom\">\r\n                    <label for=\"ntf-rule-user-wa\">User Rule</label>\r\n                    <textarea class=\"mt8\" placeholder=\"'\\' for suggestions\" v-model=\"text.user\" @input=\"handleInput($event, 'user')\" name=\"ntf-rule-user-wa\" id=\"ntf-rule-user-wa\" cols=\"30\" rows=\"2\"></textarea>\r\n                    <div v-if=\"showSuggestions.user\" class=\"suggestions\">\r\n                        <div v-for=\"(suggestion, index) in suggestions.user\" :key=\"index\" @click=\"selectSuggestion(suggestion, 'user')\">\r\n                            {{ suggestion }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"autocomplete mt16\" v-if=\"custom\">\r\n                    <label for=\"ntf-rule-client-wa\">Client Rule</label>\r\n                    <textarea class=\"mt8\" placeholder=\"'\\' for suggestions\" v-model=\"text.client\" @input=\"handleInput($event, 'client')\" name=\"ntf-rule-client-wa\" id=\"ntf-rule-client-wa\" cols=\"30\" rows=\"2\"></textarea>\r\n                    <div v-if=\"showSuggestions.client\" class=\"suggestions\">\r\n                        <div v-for=\"(suggestion, index) in suggestions.client\" :key=\"index\" @click=\"selectSuggestion(suggestion, 'client')\">\r\n                            {{ suggestion }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <span style=\"display: flex; justify-content: center; text-align: center; margin: 8px 0; width: 100%; max-width: 500px;\" class=\"mt8 mb8\">OR</span>\r\n\r\n                <div class=\"mt8 mb8\">\r\n                    <input @change=\"ntfFile = $event.target.files[0]\" type=\"file\" accept=\".xlsx, .xls, .xlsm\" name=\"ntf-file\" id=\"ntf-file\">\r\n                </div>\r\n\r\n                <div class=\"mt32\" style=\"display: flex; flex-direction: column;\">\r\n                    <label for=\"ntf-content\">message</label>\r\n                    <textarea class=\"mt8\" placeholder=\"Include your organization's name\" v-model=\"ntfContent\" name=\"ntf-content\" id=\"ntf-content\" cols=\"60\" rows=\"10\"></textarea>\r\n                </div>\r\n\r\n                <div class=\"mt16\" style=\"display: flex;\">\r\n                    <input v-model=\"consent\" style=\"width: auto; margin-right: 8px; cursor: pointer;\" type=\"checkbox\" name=\"consent\" id=\"consent\">\r\n                    <label for=\"consent\">Send without asking for consent</label>\r\n                </div>\r\n\r\n                <div class=\"mt16\">\r\n                    <button class=\"button green\" @click.prevent=\"sendWaNtf\">send</button>\r\n                    <button class=\"button neutral ml8\" @click.prevent=\"ntfPopupVisible = false, ntfContent = '', ntfRule.userrole = 'none', ntfRule.clientType = 'none';\">cancel</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n        <div v-if=\"!ntfPopupVisible\" class=\"ntf-history-table mt12\">\r\n            <table-main class=\"tr\" style=\"max-height: 250px; overflow: auto;\">\r\n                <template v-slot:thead>   \r\n                    <tr>\r\n                        <th>id</th>\r\n                        <th>to</th>\r\n                        <th>contact</th>\r\n                        <th>content</th>\r\n                        <th>status</th>\r\n                        <th>action</th>\r\n                    </tr>\r\n                </template>\r\n\r\n                <template v-slot:tbody>\r\n                    <tr v-for=\"(ntf) in ntfHistory\" :key=\"ntf.id\" class=\"tr\">\r\n                        <td>{{ ntf.id }}</td>\r\n                        <td>{{ ntf.toName }}</td>\r\n                        <td>{{ ntf.toContact }}</td>\r\n                        <td>{{ ntf.content }}</td>\r\n                        <td>\r\n                            <template v-if=\"ntf.failed == 1\">Failed</template>\r\n                            <template v-else-if=\"ntf.approved == 1 && ntf.sent == 1\">Sent</template>\r\n                            <template v-else-if=\"ntf.approved == 0\">Waiting</template>\r\n                            <template v-else-if=\"ntf.approved == 2\">Disapproved</template>\r\n                        </td>\r\n                        <td style=\"display: flex; gap: 12px;\">\r\n                            <font-awesome-icon title=\"approve\" v-if=\"ntf.approved == 0\" @click.prevent=\"setConsent(ntf.id, 1)\" :icon=\"['far', 'thumbs-up']\" class=\"consent-btn approve\"></font-awesome-icon>\r\n                            <font-awesome-icon title=\"disapprove\" v-if=\"ntf.approved == 0\" @click.prevent=\"setConsent(ntf.id, 2)\" :icon=\"['far', 'thumbs-down']\" class=\"consent-btn disapprove\"></font-awesome-icon>\r\n                        </td>\r\n                    </tr>\r\n                </template>\r\n            </table-main>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { settings } from '@/api/index.js'\r\nimport TableMain from './TableMain.vue'\r\nimport axios from 'axios'\r\nimport swal from 'sweetalert'\r\n\r\nexport default {\r\n    name: 'SettingsWaNotification',\r\n    components: {TableMain},\r\n    props: ['settingObj'],\r\n    data() {\r\n        return {\r\n            waQr: '',\r\n            ntfPopupVisible: false,\r\n            ntfContent: '',\r\n            consent: false,\r\n            ntfRule: {\r\n                userrole: 'none',\r\n                user: [],\r\n                clientType: 'none'\r\n            },\r\n            custom: false,\r\n            ntfFile: '',\r\n            options: {\r\n                user: [\r\n                    'UserName', \r\n                    'UserRole'\r\n                ],\r\n                client: [\r\n                    'ClientName', \r\n                    'ClientType', \r\n                    'ClientStatus'\r\n                ]\r\n            },\r\n            text: {\r\n                user: '',\r\n                client: ''\r\n            },\r\n            showSuggestions: {\r\n                user: false,\r\n                client: false\r\n            },\r\n            suggestionPosX: '',\r\n            suggestionPosY: '',\r\n            suggestions: {\r\n                user: [],\r\n                client: []\r\n            },\r\n\r\n            ntfHistory: []\r\n        }\r\n    },\r\n    computed: {\r\n        ClientType() {\r\n            return this.$store.getters['clients/getAllTypesList'].map(el => el.type)\r\n        },\r\n        UserRole() {\r\n            return this.$store.getters['roles/allRoles'].map(el => el.name)\r\n        },\r\n        UserName() {\r\n            return this.$store.getters['users/allUsers'].filter(el => el.isActive == 1).map(el => el.email)\r\n        },\r\n        ClientName() {\r\n            return this.$store.getters['clients/clientsGetConfirmed'].map(el => el.name)\r\n        },\r\n        ClientStatus() {\r\n            return ['Confirmed', 'Lead']\r\n        }\r\n    },\r\n    methods: {\r\n        getQr(e) {\r\n            if (e.target.tagName === 'SPAN') e.target.parentElement.disabled = true\r\n            else e.target.disabled = true\r\n\r\n            const canvas = document.createElement('canvas')\r\n            const context = canvas.getContext('2d')\r\n\r\n            canvas.width = 300;\r\n            canvas.height = 300;\r\n\r\n            context.fillStyle = '#000';\r\n            context.font = '18px Open Sans';\r\n            context.textAlign = 'center';\r\n            context.fillText('Wait while QR code is loading', canvas.width / 2, canvas.height / 2);\r\n\r\n            this.waQr = canvas\r\n            swal({\r\n                content: this.waQr,\r\n            })\r\n\r\n            settings.notifications.wa.getQr()\r\n            .then((res) => {\r\n                console.log(this.waQr)\r\n\r\n                let image = new Image()\r\n                image.src = res.data\r\n                this.waQr = image\r\n\r\n                return swal({\r\n                    content: this.waQr,\r\n                })\r\n            })\r\n            .catch(() => {\r\n                this.$toast.error(`Oops! We can't perform this action right now`)\r\n                this.waQr = ''\r\n            })\r\n            .finally(() => {\r\n                if (e.target.tagName === 'SPAN') e.target.parentElement.disabled = false\r\n                else e.target.disabled = false\r\n            })\r\n        },\r\n        sendWaNtf() {\r\n            let formData = new FormData();\r\n            formData.append('userRule', (this.text.user.trim() == '') ? ' 1 = 0 ' : this.text.user)\r\n            formData.append('clientRule', (this.text.client.trim() == '') ? ' 1 = 0 ' : this.text.client)\r\n            formData.append('content', this.ntfContent)\r\n            formData.append('custom', this.custom)\r\n            formData.append('consent', this.consent)\r\n            formData.append('file', this.ntfFile)\r\n            \r\n            axios.post('/u/api/settings/notifications/wa/create', formData, \r\n                {\r\n                    withCredentials: true,\r\n                    headers: {\r\n                        \"Content-Type\": \"multipart/form-data\"\r\n                    }\r\n                }\r\n            )\r\n            .then(() => {\r\n                this.ntfContent = ''\r\n                this.ntfRule.userrole = 'none'\r\n                this.ntfRule.clientType = 'none'\r\n                this.text.user = ''\r\n                this.text.client = ''\r\n                this.custom = false\r\n                this.consent = false\r\n                this.ntfFile = ''\r\n                this.$toast.success('notifications will be sent soon')\r\n            })\r\n            .catch(err => {\r\n                this.$toast.error(`Oops! We can't perform this action right now`)\r\n                console.log(err)\r\n            })\r\n            .finally(() => this.getHistory())\r\n        },\r\n        handleInput(e, recepientType) {\r\n            const text = e.target.value\r\n            let lastWord = e.target.value.trim().split(\" \").pop()\r\n            if (lastWord.startsWith('\\\\')) {\r\n                this.showSuggestions[recepientType] = true\r\n                this.suggestions[recepientType] = this.options[recepientType].filter(el => el.startsWith(lastWord.slice(1)))\r\n            }\r\n            else if (lastWord.endsWith('=')) {\r\n                this.showSuggestions[recepientType] = true\r\n            }\r\n            else this.showSuggestions[recepientType] = false\r\n            this.text[recepientType] = text\r\n        },\r\n        selectSuggestion(suggestion, recepientType) {\r\n            this.suggestions[recepientType] = this[suggestion]\r\n\r\n            let lastWordStart = this.text[recepientType].trim().lastIndexOf(\" \") + 1\r\n\r\n            let newText = this.text[recepientType].slice(0, lastWordStart + 1)\r\n            \r\n            if (this.text[recepientType][lastWordStart] == \"=\") newText = newText + '\"' + suggestion + '\"'\r\n            else newText = newText + suggestion\r\n\r\n            newText = newText + \" \" + this.text[recepientType].slice(this.text[recepientType].length)\r\n            \r\n            this.text[recepientType] = newText;\r\n            this.showSuggestions[recepientType] = false;\r\n        },\r\n        getHistory() {\r\n            settings.notifications.wa.get()\r\n            .then(res => this.ntfHistory = res.data)\r\n            .catch(err => console.log(err))\r\n        },\r\n        setConsent(id, consent) {\r\n            settings.notifications.wa.consent({\r\n                ntfId: id,\r\n                consent,\r\n            })\r\n            .then(() => this.$toast.success('Success'))\r\n            .catch(() => {\r\n                this.$toast.error(`Oops! We can't perform this action right now`)\r\n            })\r\n            .finally(() => this.getHistory())\r\n        }\r\n    },\r\n    created() {\r\n        this.$store.dispatch('users/usersAll')\r\n        this.$store.dispatch('clients/clientsGetConfirmed')\r\n        this.$store.dispatch('clients/clientsGetLead')\r\n        \r\n        this.getHistory()\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.consent-btn {\r\n    height: 18px; \r\n    width: 18px; \r\n    cursor: pointer;\r\n}\r\n.approve:hover {\r\n    color: #169871;\r\n}\r\n.disapprove:hover {\r\n    color: rgb(163, 56, 56);\r\n}\r\n.ntf-grid {\r\n    width: auto;\r\n    display: grid;\r\n    grid-template-columns: 150px minmax(100px, 350px);\r\n    align-items: center;\r\n}\r\n#ntf-condition {\r\n    grid-column-start: 1;\r\n    grid-column-end: 3;\r\n}\r\n#ntf-content {\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n#ntf-file {\r\n    width: 100%;\r\n    max-width: 500px;\r\n}\r\n#file-upload-button {\r\n    display: none;\r\n}\r\n.ntf-grid label,\r\n.ntf-grid input,\r\n.ntf-grid select,\r\n.ntf-grid textarea {\r\n    margin-top: 8px;\r\n    width: 100% !important; \r\n}\r\n\r\ninput, textarea, select {\r\n    border-radius: 3px;\r\n}\r\n\r\n.autocomplete {\r\n  position: relative;\r\n}\r\n.autocomplete textarea {\r\n  width: 100%;\r\n  max-width: 500px;\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n}\r\n.autocomplete .suggestions {\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 0;\r\n  right: 0;\r\n  background-color: #fff;\r\n  border: 1px solid #ddd;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  z-index: 1;\r\n}\r\n.autocomplete .suggestions div {\r\n  padding: 8px;\r\n  cursor: pointer;\r\n}\r\n.autocomplete .suggestions div:hover {\r\n  background-color: #f5f5f5;\r\n}\r\n.ntf-history-table {\r\n    width: 100%;\r\n}\r\n.ntf-history-table td {\r\n    vertical-align: text-top;\r\n}\r\n</style>","import { render } from \"./SettingsWaNotification.vue?vue&type=template&id=3c3e1bca&scoped=true\"\nimport script from \"./SettingsWaNotification.vue?vue&type=script&lang=js\"\nexport * from \"./SettingsWaNotification.vue?vue&type=script&lang=js\"\n\nimport \"./SettingsWaNotification.vue?vue&type=style&index=0&id=3c3e1bca&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\portal\\\\frontend\\\\portal\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3c3e1bca\"]])\n\nexport default __exports__","import { render } from \"./TheSetting.vue?vue&type=template&id=7dddad92&scoped=true\"\nimport script from \"./TheSetting.vue?vue&type=script&lang=js\"\nexport * from \"./TheSetting.vue?vue&type=script&lang=js\"\n\nimport \"./TheSetting.vue?vue&type=style&index=0&id=7dddad92&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\portal\\\\frontend\\\\portal\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7dddad92\"]])\n\nexport default __exports__"],"names":["class","name","__exports__","render","id","style","settingsForm","settingObj","index","displayOrder","type","save","$event","String","setting","value","label","meta","title","tooltip","for","size","length","values","requireAuth","getOtp","icon","otpFor","placeholder","otp","verifyOtp","verify","component","currentState","toggleCheckbox","data","props","required","methods","this","$emit","mounted","ntfPopupVisible","getQr","text","user","client","custom","handleInput","cols","rows","showSuggestions","suggestions","suggestion","key","selectSuggestion","ntfFile","target","files","accept","ntfContent","consent","sendWaNtf","ntfRule","userrole","clientType","thead","tbody","ntfHistory","ntf","toName","toContact","content","failed","approved","sent","setConsent","components","TableMain","waQr","options","suggestionPosX","suggestionPosY","computed","ClientType","$store","getters","map","el","UserRole","UserName","filter","isActive","email","ClientName","ClientStatus","e","tagName","parentElement","disabled","canvas","document","createElement","context","getContext","width","height","fillStyle","font","textAlign","fillText","then","res","console","log","image","Image","src","catch","$toast","error","finally","formData","FormData","append","trim","withCredentials","headers","success","err","getHistory","recepientType","lastWord","split","pop","startsWith","slice","endsWith","lastWordStart","lastIndexOf","newText","ntfId","created","dispatch","ToggleSwitch","SettingsWaNotification","originalFormData","formCount","count","prevFormId","obj","formId","btnVisibility","arg","makePostReq","getSettings","args","forOtp","forEach","prop","forVerification","cancel","password","pageId","p"],"sourceRoot":""}