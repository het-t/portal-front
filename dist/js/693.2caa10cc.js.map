{"version":3,"file":"js/693.2caa10cc.js","mappings":"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","sources":["webpack://portal/./src/components/TablePagination.vue","webpack://portal/./src/components/TablePagination.vue?9a0d"],"sourcesContent":["<template>\r\n    <div class=\"flex table-pagination\">\r\n        <div class=\"recordsPerPage\">\r\n            <label for=\"recordsPerPage\">entries</label>\r\n            <select @change=\"getPageData()\" id=\"recordsPerPage\" v-model=\"recordsPerPage\"> \r\n                <option :value=50>50</option>\r\n                <option :value=100>100</option>\r\n                <option :value=150>150</option>\r\n                <option :value=200>200</option>\r\n            </select>\r\n        </div>\r\n        <ul>\r\n            <li class=\"neutral\">\r\n                <button @click=\"pageChange(1)\">&lt;</button>\r\n            </li>\r\n            <li class=\"neutral\" v-for=\"n in showPage()\" :key=\"n\">\r\n                <button :class=\"(n == currentPage) ? 'green' : ''\" @click=\"pageChange(n)\">{{n}}</button>\r\n            </li>\r\n            <li class=\"neutral\">\r\n                <button @click=\"pageChange(pageCount)\">&gt;</button>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import axios from 'axios'\r\n\r\n    export default {\r\n        name: 'TablePagination',\r\n        data() {\r\n            return {\r\n                pageData: '',\r\n                currentPage: 1,\r\n                recordsPerPage: 50,\r\n                pageCount: '',\r\n                noCachingTotalRecords: ''\r\n            }\r\n        },\r\n        computed: {\r\n            totalRecords() {\r\n                if (this.noCachingTotalRecords != '') return this.noCachingTotalRecords\r\n                return this.$store.getters?.[`${this.tableName}/${this.tableName}CountGet`]\r\n            },\r\n            isStoreAvailable() {\r\n                return !(this.noCaching == true)\r\n            }\r\n        },\r\n        props: {\r\n            tableName: String,\r\n            sortBy: String,\r\n            sortOrder: Number,\r\n            filters: Array,\r\n            noCaching: Boolean\r\n        },\r\n        methods: {\r\n            showPage() {\r\n                if (!isNaN(this.pageCount)) {\r\n                    let numShown = 5;\r\n                    numShown = Math.min(numShown, this.pageCount)\r\n                    let first = this.currentPage - Math.floor(numShown / 2)\r\n                    first = Math.max(first, 1)\r\n                    first = Math.min(first, this.pageCount - numShown + 1)\r\n                    return [...Array(numShown)].map((k,i) => i + first)\r\n                }\r\n                else {\r\n                    return 0\r\n                }\r\n            },\r\n            pageChange(page) {\r\n                this.currentPage = page\r\n                if (this.isStoreAvailable) this.$store.commit(`${this.tableName}/currentPageSet`, {index: page})\r\n                this.getPageData()\r\n            },\r\n            getPageData() {\r\n                this.pageCount = Math.ceil(this.totalRecords / this.recordsPerPage)\r\n\r\n                let {sortBy, sortOrder} = this.$store.getters?.[`${this.tableName}/sortGet`] ?\r\n                                        this.$store.getters?.[`${this.tableName}/sortGet`] :\r\n                                        {}\r\n\r\n                let pageDataStore = this.$store.getters?.[`${this.tableName}/${this.tableName}ListGet`]?.(this.currentPage, sortBy, sortOrder, this.filters)\r\n\r\n                if ((\r\n                    (pageDataStore == undefined) || \r\n                    (pageDataStore?.length == 0) || \r\n                    (pageDataStore?.length < this.recordsPerPage && pageDataStore?.length >= 50)\r\n                ) || !this.isStoreAvailable) {\r\n                    axios.get(`/u/api/${this.tableName}`, {\r\n                        params: {\r\n                            from: (this.currentPage-1)*this.recordsPerPage,\r\n                            recordsPerPage: this.recordsPerPage,\r\n                            sortBy,\r\n                            sortOrder,\r\n                            filters: this.filters\r\n                        },\r\n                        withCredentials: true\r\n                    })\r\n                    .then((res) => {\r\n                        if (this.isStoreAvailable) {\r\n                            this.$store.commit(`${this.tableName}/${this.tableName}List`, {\r\n                                index: this.currentPage, \r\n                                sortBy, \r\n                                sortOrder,\r\n                                filters: this.filters,\r\n                                data: res.data[this.tableName+'List']\r\n                            })   \r\n                        }\r\n                        this.$emit(\"tableData\", res.data[this.tableName+'List'])                \r\n                    })\r\n                } \r\n                else {\r\n                    this.$emit(\"tableData\", pageDataStore)\r\n                }\r\n            },\r\n        },\r\n        created() {\r\n            if (this.isStoreAvailable){ \r\n                const currentPageInStore = this.$store.getters[`${this.tableName}/getCurrentPage`]\r\n\r\n                if (currentPageInStore == '' || currentPageInStore == undefined) {\r\n                    this.$store.commit(`${this.tableName}/currentPageSet`, {index: this.currentPage})\r\n                }\r\n                else this.currentPage = currentPageInStore\r\n            }\r\n\r\n            if (this.totalRecords == '' || this.totalRecords == undefined) {\r\n                axios.get(`/u/api/${this.tableName}/count`, {\r\n                    params: {\r\n                        filters: this.filters\r\n                    },\r\n                    withCredentials: true\r\n                })\r\n                .then((res) => {\r\n                    this.noCachingTotalRecords = res.data.count\r\n                    if (this.isStoreAvailable)this.$store.commit?.(`${this.tableName}/${this.tableName}CountSet`, res?.data?.count)\r\n                    this.getPageData()\r\n                })\r\n            }\r\n            else {\r\n                this.getPageData()\r\n            }            \r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .flex {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n    }\r\n    .recordsPerPage {\r\n        display: flex;\r\n        column-gap: 8px;\r\n        row-gap: 8px;\r\n        align-items: center;\r\n        margin: 13px 0;\r\n    }\r\n    select {\r\n        padding: 4px;\r\n    }\r\n    ul {\r\n        display: flex;\r\n        flex-direction: row;\r\n        flex-wrap: wrap;\r\n    }\r\n    li {\r\n        list-style: none;\r\n        border: solid 1px #e7eaec;\r\n        margin: 0 1px;\r\n    }\r\n    li button, button:hover, button:focus {\r\n        padding: 4px 10px;\r\n        border: none !important;\r\n    }\r\n    button:active, .current {\r\n        background-color: #e7eaec;\r\n        color: black;\r\n    }\r\n    button {\r\n        color: grey;\r\n    }\r\n</style>>","import { render } from \"./TablePagination.vue?vue&type=template&id=56d94cac&scoped=true\"\nimport script from \"./TablePagination.vue?vue&type=script&lang=js\"\nexport * from \"./TablePagination.vue?vue&type=script&lang=js\"\n\nimport \"./TablePagination.vue?vue&type=style&index=0&id=56d94cac&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\portal\\\\frontend\\\\portal\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56d94cac\"]])\n\nexport default __exports__"],"names":["class","for","value","getPageData","id","recordsPerPage","pageChange","showPage","n","key","currentPage","pageCount","name","data","pageData","noCachingTotalRecords","computed","totalRecords","this","$store","getters","tableName","isStoreAvailable","noCaching","props","String","sortBy","sortOrder","Number","filters","Array","Boolean","methods","isNaN","numShown","Math","min","first","floor","max","map","k","i","page","commit","index","ceil","pageDataStore","undefined","length","params","from","withCredentials","then","res","$emit","created","currentPageInStore","count","__exports__","render"],"sourceRoot":""}