{"version":3,"file":"js/780.1809cef1.js","mappings":"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","sources":["webpack://portal/./src/components/MyTasksList.vue","webpack://portal/./src/components/MyTasksList.vue?720c","webpack://portal/./src/components/TableMain.vue","webpack://portal/./src/components/TableMain.vue?1bc3","webpack://portal/./src/components/TablePagination.vue","webpack://portal/./src/components/TablePagination.vue?9a0d","webpack://portal/./src/components/TableSort.vue","webpack://portal/./src/components/TableSort.vue?fd80","webpack://portal/./src/helpers/swalEdit.js"],"sourcesContent":["<template>\r\n    <div>\r\n        <table-main>\r\n\r\n            <template #thead>\r\n                <tr class=\"table-heading\">\r\n                    <th>\r\n                        <div class=\"flex\">\r\n                            <table-sort :key=\"i\" @clicked=\"j=!j; k=!k; l=!l; sort();\" sortType=\"string\" sortBy=\"title\" storeName=\"myTasks\"></table-sort>\r\n\r\n                            <div class=\"floating-container\">\r\n                                <input v-debounce:700ms.lock=\"sort\" v-model=\"filterFor[0]\" ref=\"taskH\" class=\"header p0\" type=\"text\" required>\r\n                                <span @click=\"$refs['taskH'].focus()\" class=\"floating-label\">task</span>\r\n                            </div>\r\n                        </div>\r\n                    </th>\r\n\r\n                    <th>\r\n                        <div class=\"flex\">\r\n                            <table-sort :key=\"l\" @clicked=\"i=!i; j=!j; k=!k; sort();\" sortType=\"string\" sortBy=\"client\" storeName=\"myTasks\"></table-sort>\r\n                            \r\n                            <div class=\"floating-container\">\r\n                                <input v-debounce:700ms.lock=\"sort\" v-model=\"filterFor[2]\" ref=\"clientH\" class=\"header p0\" type=\"text\" required>\r\n                                <span @click=\"$refs['clientH'].focus()\" class=\"floating-label\">client</span>\r\n                            </div>\r\n                        </div>\r\n                    </th>\r\n\r\n                    <th>\r\n                        <div class=\"flex\">\r\n                            <table-sort :key=\"j\" @clicked=\"i=!i; k=!k; l=!l; sort();\" sortType=\"string\" sortBy=\"desc\" storeName=\"myTasks\"></table-sort>\r\n\r\n                            <div class=\"floating-container\">\r\n                                <input v-debounce:700ms.lock=\"sort\" v-model=\"filterFor[1]\" ref=\"descH\" class=\"header p0\" type=\"text\" required>\r\n                                <span @click=\"$refs['descH'].focus()\" class=\"floating-label\">description</span>\r\n                            </div>\r\n                        </div>\r\n                    </th>\r\n\r\n                    <th>\r\n                        <div class=\"flex\">\r\n                            <table-sort :key=\"k\" @clicked=\"i=!i; j=!k; l=!l; sort();\" sortType=\"string\" sortBy=\"deadline\" storeName=\"myTasks\"></table-sort>\r\n\r\n                            <div class=\"floating-container\">\r\n                                <input v-debounce:700ms.lock=\"sort\" v-model=\"filterFor[3]\" ref=\"deadlineH\" class=\"header p0\" type=\"text\" required>\r\n                                <span @click=\"$refs['deadlineH'].focus()\" class=\"floating-label\">deadline</span>\r\n                            </div>\r\n                        </div>              \r\n                    </th>\r\n\r\n                    <th>status</th>\r\n                </tr>\r\n            </template>\r\n\r\n            <template #tbody>\r\n                <tr class=\"tr\" v-for=\"(task, index) in myTasksList\" :key=\"index\">\r\n                    <td>\r\n                        {{task.title}}\r\n                    </td>\r\n                    <td>\r\n                        {{task.client }}\r\n                    </td>\r\n                    <td v-if=\"task.description != '_#_*&^'\">{{task.description}}</td>\r\n                    <td v-else></td>\r\n                    <td>\r\n                        {{task.deadline}}\r\n                    </td>\r\n                    <td>\r\n                        <select @change=\"changeStatus(task.costSaved, task.taskId, task.id, task.statusId)\" v-model=\"task.statusId\" name=\"\" id=\"\">\r\n                            <option v-for=\"status in subTaskStatuses\" :value=\"status.id\" :key=\"status.id\">{{status.status}}</option>\r\n                        </select>\r\n                    </td>\r\n                </tr>  \r\n            </template>\r\n\r\n                <table-pagination :key=\"$store.getters['myTasks/getKey']\"\r\n                    :filters=\"filterFor\"\r\n                    @tableData=\"myTasksList = $event\"\r\n                    tableName=\"myTasks\"\r\n                ></table-pagination>\r\n\r\n        </table-main>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport swal from 'sweetalert'\r\nimport { myTasks } from '../api'\r\nimport useEditSwal from '../helpers/swalEdit'\r\nimport TableMain from './TableMain.vue'\r\nimport TablePagination from './TablePagination.vue'\r\nimport TableSort from './TableSort.vue'\r\nexport default {\r\n    components: { TableMain, TablePagination, TableSort },\r\n    name: \"MyTasksList\",\r\n    data() {\r\n        return {\r\n            subTaskStatuses: [{id: 1, status: \"hold\"}, {id: 2, status: \"to do\"}, {id: 3, status: \"in progress\"}, {id: 4, status: \"pending for approval\"}, {id: 5, status: \"done\"}, {id: 6, status: \"cancel\"}, {id: 7, status: \"pending with client\"}, {id: 8, status: \"signed documents awaited\"}, {id: 9, status: \"pending for DSC\"}, {id: 10, status: 'reassigned'}, {id: 11, status: 'approved'}, {id: 12, status: \"Pending before authority\"}],\r\n            myTasksList: [],\r\n\r\n            i:0, j:0, k:0, l:0, p:0,\r\n\r\n            filterFor: ['', '', ''],\r\n\r\n            polling: false\r\n        }\r\n    },\r\n    methods: {\r\n        changeStatus(costSaved, taskId, subTaskId, statusId) {\r\n            if (costSaved == 0 && statusId == 5) {\r\n\r\n                swal({\r\n                    text: \"Provide the cost of sub-task before marking it done\",\r\n                    content: \"input\",\r\n                    buttons: true\r\n                })\r\n                .then((cost) => {\r\n                    if (!cost) throw null\r\n                    return myTasks.changeStatus({taskId, subTaskId, statusId, cost, costSaved})\r\n                })\r\n                .catch(err => console.log(err))\r\n                .finally(() => {\r\n                    this.$store.commit(\"tasks/refetch\", {})\r\n                    this.$store.commit(\"myTasks/refetch\")\r\n                })\r\n            }\r\n            else {\r\n                this.polling = false\r\n                useEditSwal({\r\n                    text: '',\r\n                    mutationFnName: 'myTasks/refetch',\r\n                    mutationArgs: {},\r\n                    promise: myTasks.changeStatus({taskId, subTaskId, statusId, costSaved}),\r\n                    context: this\r\n                })\r\n            }\r\n        },\r\n        sort() {\r\n            this.$store.commit('myTasks/paginate')\r\n        }\r\n    },\r\n    mounted() {\r\n        var polling = (context) => {\r\n            setTimeout(() => {\r\n                this.$store.commit('myTasks/refetch')\r\n                if (context?.polling) polling(context)\r\n            }, 600000) \r\n        }\r\n        polling(this)\r\n        this.polling = true\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n    .tr th:not(:nth-last-child(1)), \r\n    .tr td:not(:nth-last-child(1)), \r\n    .table-heading th:not(:nth-last-child(1)) {\r\n        border-right: solid 1px #e7eaec !important;\r\n    }\r\n    .flex { \r\n        display: flex;\r\n    }\r\n    select {\r\n        width: fit-content;\r\n        border: none;\r\n    }\r\n    select, option {\r\n        text-transform: capitalize;\r\n        padding: 0;\r\n    }\r\n</style>","import { render } from \"./MyTasksList.vue?vue&type=template&id=1c61cd60&scoped=true\"\nimport script from \"./MyTasksList.vue?vue&type=script&lang=js\"\nexport * from \"./MyTasksList.vue?vue&type=script&lang=js\"\n\nimport \"./MyTasksList.vue?vue&type=style&index=0&id=1c61cd60&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\portal\\\\frontend\\\\portal\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1c61cd60\"]])\n\nexport default __exports__","<template>\r\n        <div class=\"card\">\r\n\r\n            <div class=\"mr16 ml16 mt16\">\r\n                <div class=\"table-main-head ml16 mb16\">\r\n                    <slot name=\"tableHeader\"></slot>\r\n                </div>\r\n                <table>\r\n                    <thead>\r\n                        <slot name=\"thead\"></slot>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        <slot name=\"tbody\"></slot>\r\n                    </tbody>\r\n                </table>\r\n                \r\n                <slot></slot>\r\n            </div>\r\n        </div>\r\n\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: 'TableMain',\r\n    }\r\n</script>\r\n\r\n<style>\r\n.table-main-head .icon {\r\n    width: 16px;\r\n    height: 16px;\r\n    border: solid 1px #c2c2c2;\r\n    border-radius: 100%;\r\n    padding: 4px;\r\n    cursor: pointer;\r\n}\r\n.table-main-head h2 {\r\n    font-weight: 300;\r\n}\r\n</style>","import { render } from \"./TableMain.vue?vue&type=template&id=c5e7c7ca\"\nimport script from \"./TableMain.vue?vue&type=script&lang=js\"\nexport * from \"./TableMain.vue?vue&type=script&lang=js\"\n\nimport \"./TableMain.vue?vue&type=style&index=0&id=c5e7c7ca&lang=css\"\n\nimport exportComponent from \"D:\\\\portal\\\\frontend\\\\portal\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <div class=\"flex table-pagination\">\r\n        <div class=\"recordsPerPage\">\r\n            <label for=\"recordsPerPage\">entries</label>\r\n            <select @change=\"getPageData()\" id=\"recordsPerPage\" v-model=\"recordsPerPage\"> \r\n                <option :value=50>50</option>\r\n                <option :value=100>100</option>\r\n                <option :value=150>150</option>\r\n                <option :value=200>200</option>\r\n            </select>\r\n        </div>\r\n        <ul>\r\n            <li class=\"neutral\">\r\n                <button @click=\"pageChange(1)\">&lt;</button>\r\n            </li>\r\n            <li class=\"neutral\" v-for=\"n in showPage()\" :key=\"n\">\r\n                <button :class=\"(n == currentPage) ? 'green' : ''\" @click=\"pageChange(n)\">{{n}}</button>\r\n            </li>\r\n            <li class=\"neutral\">\r\n                <button @click=\"pageChange(pageCount)\">&gt;</button>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import axios from 'axios'\r\n\r\n    export default {\r\n        name: 'TablePagination',\r\n        data() {\r\n            return {\r\n                pageData: '',\r\n                currentPage: 1,\r\n                recordsPerPage: 50,\r\n                pageCount: '',\r\n                noCachingTotalRecords: ''\r\n            }\r\n        },\r\n        computed: {\r\n            totalRecords() {\r\n                if (this.noCachingTotalRecords != '') return this.noCachingTotalRecords\r\n                return this.$store.getters?.[`${this.tableName}/${this.tableName}CountGet`]\r\n            },\r\n            isStoreAvailable() {\r\n                return !(this.noCaching == true)\r\n            }\r\n        },\r\n        props: {\r\n            tableName: String,\r\n            sortBy: String,\r\n            sortOrder: Number,\r\n            filters: Array,\r\n            noCaching: Boolean\r\n        },\r\n        methods: {\r\n            showPage() {\r\n                if (!isNaN(this.pageCount)) {\r\n                    let numShown = 5;\r\n                    numShown = Math.min(numShown, this.pageCount)\r\n                    let first = this.currentPage - Math.floor(numShown / 2)\r\n                    first = Math.max(first, 1)\r\n                    first = Math.min(first, this.pageCount - numShown + 1)\r\n                    return [...Array(numShown)].map((k,i) => i + first)\r\n                }\r\n                else {\r\n                    return 0\r\n                }\r\n            },\r\n            pageChange(page) {\r\n                this.currentPage = page\r\n                if (this.isStoreAvailable) this.$store.commit(`${this.tableName}/currentPageSet`, {index: page})\r\n                this.getPageData()\r\n            },\r\n            getPageData() {\r\n                this.pageCount = Math.ceil(this.totalRecords / this.recordsPerPage)\r\n\r\n                let {sortBy, sortOrder} = this.$store.getters?.[`${this.tableName}/sortGet`] ?\r\n                                        this.$store.getters?.[`${this.tableName}/sortGet`] :\r\n                                        {}\r\n\r\n                let pageDataStore = this.$store.getters?.[`${this.tableName}/${this.tableName}ListGet`]?.(this.currentPage, sortBy, sortOrder, this.filters)\r\n\r\n                if ((\r\n                    (pageDataStore == undefined) || \r\n                    (pageDataStore?.length == 0) || \r\n                    (pageDataStore?.length < this.recordsPerPage && pageDataStore?.length >= 50)\r\n                ) || !this.isStoreAvailable) {\r\n                    axios.get(`/u/api/${this.tableName}`, {\r\n                        params: {\r\n                            from: (this.currentPage-1)*this.recordsPerPage,\r\n                            recordsPerPage: this.recordsPerPage,\r\n                            sortBy,\r\n                            sortOrder,\r\n                            filters: this.filters\r\n                        },\r\n                        withCredentials: true\r\n                    })\r\n                    .then((res) => {\r\n                        if (this.isStoreAvailable) {\r\n                            this.$store.commit(`${this.tableName}/${this.tableName}List`, {\r\n                                index: this.currentPage, \r\n                                sortBy, \r\n                                sortOrder,\r\n                                filters: this.filters,\r\n                                data: res.data[this.tableName+'List']\r\n                            })   \r\n                        }\r\n                        this.$emit(\"tableData\", res.data[this.tableName+'List'])                \r\n                    })\r\n                } \r\n                else {\r\n                    this.$emit(\"tableData\", pageDataStore)\r\n                }\r\n            },\r\n        },\r\n        created() {\r\n            if (this.isStoreAvailable){ \r\n                const currentPageInStore = this.$store.getters[`${this.tableName}/getCurrentPage`]\r\n\r\n                if (currentPageInStore == '' || currentPageInStore == undefined) {\r\n                    this.$store.commit(`${this.tableName}/currentPageSet`, {index: this.currentPage})\r\n                }\r\n                else this.currentPage = currentPageInStore\r\n            }\r\n\r\n            if (this.totalRecords == '' || this.totalRecords == undefined) {\r\n                axios.get(`/u/api/${this.tableName}/count`, {\r\n                    params: {\r\n                        filters: this.filters\r\n                    },\r\n                    withCredentials: true\r\n                })\r\n                .then((res) => {\r\n                    this.noCachingTotalRecords = res.data.count\r\n                    if (this.isStoreAvailable)this.$store.commit?.(`${this.tableName}/${this.tableName}CountSet`, res?.data?.count)\r\n                    this.getPageData()\r\n                })\r\n            }\r\n            else {\r\n                this.getPageData()\r\n            }            \r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .flex {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n    }\r\n    .recordsPerPage {\r\n        display: flex;\r\n        column-gap: 8px;\r\n        row-gap: 8px;\r\n        align-items: center;\r\n        margin: 13px 0;\r\n    }\r\n    select {\r\n        padding: 4px;\r\n    }\r\n    ul {\r\n        display: flex;\r\n        flex-direction: row;\r\n        flex-wrap: wrap;\r\n    }\r\n    li {\r\n        list-style: none;\r\n        border: solid 1px #e7eaec;\r\n        margin: 0 1px;\r\n    }\r\n    li button, button:hover, button:focus {\r\n        padding: 4px 10px;\r\n        border: none !important;\r\n    }\r\n    button:active, .current {\r\n        background-color: #e7eaec;\r\n        color: black;\r\n    }\r\n    button {\r\n        color: grey;\r\n    }\r\n</style>>","import { render } from \"./TablePagination.vue?vue&type=template&id=56d94cac&scoped=true\"\nimport script from \"./TablePagination.vue?vue&type=script&lang=js\"\nexport * from \"./TablePagination.vue?vue&type=script&lang=js\"\n\nimport \"./TablePagination.vue?vue&type=style&index=0&id=56d94cac&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\portal\\\\frontend\\\\portal\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56d94cac\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"sort mr8\" @click=\"rotateImg\" @keyup.enter=\"rotateImg\">\r\n        <template v-if=\"sortType == 'string'\">\r\n            <font-awesome-icon v-if=\"sortOrder == 1\" class=\"sort-btn\" icon=\"fa-solid fa-arrow-down-a-z\" />\r\n            <font-awesome-icon v-else class=\"sort-btn\" icon=\"fa-solid fa-arrow-up-a-z\" />\r\n        </template>\r\n\r\n        <template v-else-if=\"sortType == 'number'\">\r\n            <font-awesome-icon v-if=\"sortOrder == 1\" class=\"sort-btn\" icon=\"fa-solid fa-arrow-down-1-9\" />\r\n            <font-awesome-icon v-else class=\"sort-btn\" icon=\"fa-solid fa-arrow-up-1-9\" />\r\n        </template>\r\n    </div>\r\n</template>\r\n<script>\r\n    export default {\r\n        name: 'TableSort',\r\n        props: ['sortBy', 'storeName', 'sortType'],\r\n        data() {\r\n            return {\r\n                sortOrder: 0\r\n            }\r\n        },\r\n        methods: {\r\n            rotateImg() {\r\n                this.sortOrder === 1 ? this.sortOrder = 0 : this.sortOrder = 1\r\n                this.$emit('clicked')\r\n                // this.$store.commit(`${this.storeName}/RESET_STATE`, {isMaster: false})\r\n                this.$store.commit(`${this.storeName}/sortSet`, {\r\n                    sortBy: this.sortBy, \r\n                    sortOrder: this.sortOrder\r\n                })\r\n                // this.$emit(\"sorted\", this.sortData().reverse())\r\n            },\r\n        },\r\n        updated() {\r\n            console.log(\"updated\")\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .sort-btn {\r\n        color: #c2c2c2;\r\n    }\r\n    .sort:hover, .sort:focus {\r\n        cursor: pointer;\r\n    }\r\n</style>","import { render } from \"./TableSort.vue?vue&type=template&id=8a032ec6&scoped=true\"\nimport script from \"./TableSort.vue?vue&type=script&lang=js\"\nexport * from \"./TableSort.vue?vue&type=script&lang=js\"\n\nimport \"./TableSort.vue?vue&type=style&index=0&id=8a032ec6&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\portal\\\\frontend\\\\portal\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-8a032ec6\"]])\n\nexport default __exports__","import store from '@/store/index.js'\r\n\r\nexport default function useEditSwal({text, mutationFnName, mutationArgs, promise, context}) {\r\n    promise\r\n    .then(() => {\r\n        if (mutationFnName) store.commit(mutationFnName, mutationArgs)\r\n        context.$emit('editingCompleted', {}) //to toggle hidden-tr\r\n        context.$toast.success(`Saved ${text}`)\r\n    })\r\n    .catch((err) =>{ \r\n        if (err != null) return context.$toast.error(`Oops! We can't perform this action right now`)\r\n    })\r\n    .finally(() => {\r\n        context.disabled = false\r\n        if (context?.polling != undefined) context.polling = true\r\n    })\r\n}"],"names":["class","thead","key","i","j","k","l","sort","sortType","sortBy","storeName","filterFor","ref","type","required","$refs","focus","tbody","myTasksList","task","index","title","client","description","deadline","changeStatus","costSaved","taskId","id","statusId","name","subTaskStatuses","status","value","$store","getters","filters","$event","tableName","components","TableMain","TablePagination","TableSort","data","p","polling","methods","subTaskId","text","content","buttons","then","cost","catch","err","console","log","finally","this","commit","mutationFnName","mutationArgs","promise","context","mounted","setTimeout","__exports__","render","for","getPageData","recordsPerPage","pageChange","showPage","n","currentPage","pageCount","pageData","noCachingTotalRecords","computed","totalRecords","isStoreAvailable","noCaching","props","String","sortOrder","Number","Array","Boolean","isNaN","numShown","Math","min","first","floor","max","map","page","ceil","pageDataStore","undefined","length","params","from","withCredentials","res","$emit","created","currentPageInStore","count","rotateImg","icon","updated","useEditSwal","$toast","success","error","disabled"],"sourceRoot":""}