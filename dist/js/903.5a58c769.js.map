{"version":3,"file":"js/903.5a58c769.js","mappings":"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","sources":["webpack://portal/./src/components/TablePagination.vue","webpack://portal/./src/components/TablePagination.vue?9a0d"],"sourcesContent":["<template>\r\n    <div class=\"flex\">\r\n        <div class=\"recordsPerPage\">\r\n            <label for=\"recordsPerPage\">entries</label>\r\n            <select @change=\"getPageData()\" id=\"recordsPerPage\" v-model=\"recordsPerPage\" class=\"ml8\"> \r\n                <option :value=10>10</option>\r\n                <option :value=20>20</option>\r\n                <option :value=50>50</option>\r\n                <option :value=\"100\">100</option>\r\n            </select>\r\n        </div>\r\n        <ul>\r\n            <li class=\"neutral\">\r\n                <button @click=\"pageChange(1)\">&lt;</button>\r\n            </li>\r\n            <li class=\"neutral\" v-for=\"n in showPage()\" :key=\"n\">\r\n                <button :class=\"(n == currentPage) ? 'green' : ''\" @click=\"pageChange(n)\">{{n}}</button>\r\n            </li>\r\n            <li class=\"neutral\">\r\n                <button @click=\"pageChange(pageCount)\">&gt;</button>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import axios from 'axios'\r\n\r\n    export default {\r\n        name: 'TablePagination',\r\n        data() {\r\n            return {\r\n                pageData: '',\r\n                currentPage: 1,\r\n                recordsPerPage: 10,\r\n                pageCount: '',\r\n            }\r\n        },\r\n        computed: {\r\n            totalRecords() {\r\n                return this.$store.getters[`${this.tableName}/${this.tableName}CountGet`]\r\n            },\r\n        },\r\n        props: {\r\n            tableName: String,\r\n            sortBy: String,\r\n            sortOrder: Number,\r\n            filters: Array\r\n        },\r\n        methods: {\r\n            showPage() {\r\n                if (!isNaN(this.pageCount)) {\r\n                    let numShown = 5;\r\n                    numShown = Math.min(numShown, this.pageCount)\r\n                    let first = this.currentPage - Math.floor(numShown / 2)\r\n                    first = Math.max(first, 1)\r\n                    first = Math.min(first, this.pageCount - numShown + 1)\r\n                    return [...Array(numShown)].map((k,i) => i + first)\r\n                }\r\n                else {\r\n                    return 0\r\n                }\r\n            },\r\n            pageChange(page) {\r\n                this.currentPage = page\r\n                this.$store.commit(`${this.tableName}/currentPageSet`, {index: page})\r\n                this.getPageData()\r\n            },\r\n            getPageData() {\r\n                this.pageCount = Math.ceil(this.totalRecords / this.recordsPerPage)\r\n\r\n                const {sortBy, sortOrder} = this.$store.getters[`${this.tableName}/sortGet`]\r\n\r\n                let pageDataStore = this.$store.getters[`${this.tableName}/${this.tableName}ListGet`]?.(this.currentPage, sortBy, sortOrder, this.filters)\r\n\r\n                if (\r\n                    (pageDataStore == undefined) || \r\n                    (pageDataStore?.length == 0) || \r\n                    (pageDataStore?.length < this.recordsPerPage && pageDataStore?.length >= 10)\r\n                ) {\r\n\r\n                    axios.get(`/u/api/${this.tableName}`, {\r\n                        params: {\r\n                            from: (this.currentPage-1)*this.recordsPerPage,\r\n                            recordsPerPage: this.recordsPerPage,\r\n                            sortBy,\r\n                            sortOrder,\r\n                            filters: this.filters\r\n                        },\r\n                        withCredentials: true\r\n                    })\r\n                    .then((res) => {\r\n                        this.$store.commit(`${this.tableName}/${this.tableName}List`, {\r\n                            index: this.currentPage, \r\n                            sortBy, \r\n                            sortOrder,\r\n                            filters: this.filters,\r\n                            data: res.data[this.tableName+'List']\r\n                        })    \r\n                        this.$emit(\"tableData\", res.data[this.tableName+'List'])                \r\n                    })\r\n                } \r\n                else {\r\n                    this.$emit(\"tableData\", pageDataStore)\r\n                }\r\n            },\r\n        },\r\n        created() {\r\n            this.$store.commit(`${this.tableName}/currentPageSet`, {index: this.currentPage})\r\n            if (this.totalRecords == '') {\r\n                axios.get(`/u/api/${this.tableName}/count`, {\r\n                    withCredentials: true\r\n                })\r\n                .then((res) => {\r\n                    this.$store.commit(`${this.tableName}/${this.tableName}CountSet`, res?.data?.count)\r\n                    this.getPageData()\r\n                })\r\n            }\r\n            else {\r\n                this.getPageData()\r\n            }            \r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .flex {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n    }\r\n    .recordsPerPage {\r\n        display: flex;\r\n        align-items: center;\r\n        margin: 13px 0;\r\n    }\r\n    select {\r\n        padding: 4px;\r\n    }\r\n    ul {\r\n        display: flex;\r\n        flex-direction: row;\r\n        flex-wrap: wrap;\r\n    }\r\n    li {\r\n        list-style: none;\r\n        border: solid 1px #e7eaec;\r\n        margin: 0 1px;\r\n    }\r\n    li button, button:hover, button:focus {\r\n        padding: 4px 10px;\r\n        border: none !important;\r\n    }\r\n    button:active, .current {\r\n        background-color: #e7eaec;\r\n        color: black;\r\n    }\r\n    button {\r\n        color: grey;\r\n    }\r\n</style>>","import { render } from \"./TablePagination.vue?vue&type=template&id=18a9769c&scoped=true\"\nimport script from \"./TablePagination.vue?vue&type=script&lang=js\"\nexport * from \"./TablePagination.vue?vue&type=script&lang=js\"\n\nimport \"./TablePagination.vue?vue&type=style&index=0&id=18a9769c&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\portal\\\\frontend\\\\portal\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-18a9769c\"]])\n\nexport default __exports__"],"names":["class","for","value","getPageData","id","recordsPerPage","pageChange","showPage","n","key","currentPage","pageCount","name","data","pageData","computed","totalRecords","this","$store","getters","tableName","props","String","sortBy","sortOrder","Number","filters","Array","methods","isNaN","numShown","Math","min","first","floor","max","map","k","i","page","commit","index","ceil","pageDataStore","undefined","length","params","from","withCredentials","then","res","$emit","created","count","__exports__","render"],"sourceRoot":""}