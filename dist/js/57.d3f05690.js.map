{"version":3,"file":"js/57.d3f05690.js","mappings":"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","sources":["webpack://portal/./src/components/TasksCreate.vue","webpack://portal/./src/components/TasksCreate.vue?79a2","webpack://portal/./src/helpers/RightCheck.js","webpack://portal/./src/helpers/swalCreate.js","webpack://portal/./src/helpers/swalEdit.js"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"card\">\r\n            <div class=\"table-tabs\">\r\n                <button @click=\"openTab($event, 'details')\" :ref='\"defaultTab\"+uk' class=\"button neutral tab\">details</button>\r\n                <button @click=\"openTab($event, 'logs')\" class=\"button neutral tab\">logs</button>\r\n            </div>\r\n\r\n            <div class=\"fg-wrapper mt16 pb16 pr16 pl16 hide\" :ref='\"details\"+uk'>\r\n                <div class=\"fg pl16\">\r\n                    <form class=\"mb16\">\r\n                        <div>\r\n                            <div class=\"row\">\r\n                                <label :ref=\"('details'+uk+'focus')\" :for=\"'task-title'+uk\" class=\"labels c1\">title</label>\r\n                                <input v-model=\"taskTitle\" type=\"text\" :id='\"task-title\"+uk'>\r\n                            </div>\r\n                            \r\n                            <div class=\"row mt8\">\r\n                                <label :for=\"'task-client'+uk\" class=\"labels c1\">client</label>\r\n                                <vue-multiselect :id=\"'task-client'+uk\" v-model=\"taskClient\" :options=\"clientsGetConfirmed\" :custom-label=\"labelForClient\" track-by=\"id\" placeholder=\"Select Client\">\r\n                                    <template #noResult>\r\n                                        Oops! No client found. Consider creating new client\r\n                                    </template>\r\n                                </vue-multiselect>\r\n                            </div>\r\n\r\n                            <div class=\"row mt8\">\r\n                                <label :for=\"'task-coordinator'+uk\" class=\"labels c1\">co-ordinator</label>\r\n                                <vue-multiselect multiple class=\"options-list multiselect__tag_bg\" :id=\"'task-coordinator'+uk\" v-model=\"taskCoordinator\" placeholder=\"Select Coordinator\" :options=\"allUsers\" :custom-label=\"labelForCoordinator\" track-by=\"id\">\r\n                                    <template #noResult>\r\n                                        Oops! No user found. Consider creating new user\r\n                                    </template>\r\n\r\n                                    <template v-slot:option=\"props\">\r\n                                        <span class=\"p0 m0\" style=\"height: 0 !important; width: 0 !important;\" :class=\"props.option.isActive == 0 ? 'not-active' : ''\">\r\n                                            {{props.option.firstName}} {{props.option.lastName}} ({{props.option.id}})\r\n                                        </span>\r\n                                    </template>\r\n                                </vue-multiselect>\r\n                            </div>\r\n\r\n                            <div class=\"row mt8\">\r\n                                <label :for=\"'task-tasks'+uk\" class=\"labels c1\">task</label>\r\n                                <vue-multiselect :id=\"'task-tasks'+uk\" v-model=\"taskMasterId\" placeholder=\"Select Task-Master\" :options=\"tasksMasterListGet\" :custom-label=\"labelForTaskMaster\" track-by=\"id\">\r\n                                    <template #noResult>\r\n                                        Oops! No task-master found. Consider creating new task-master\r\n                                    </template>\r\n                                </vue-multiselect>\r\n                            </div>\r\n\r\n                            \r\n                            <div v-show=\"editing\">\r\n                                <div class=\"row mt8\">\r\n                                    <label :for=\"'contactEmail'+uk\" class=\"labels c1\">Email</label>\r\n                                    <input :value=\"clientContact?.conEmail\" :id=\"'contactEmail'+uk\" disabled>\r\n                                </div>\r\n\r\n                                <div class=\"row mt8\">\r\n                                    <label :for=\"'contactPhone'+uk\" class=\"labels c1\">Phone</label>\r\n                                    <input :value=\"clientContact?.conPhone\" :id=\"'contactPhone'+uk\" type=\"text\" disabled>\r\n                                </div>    \r\n                                \r\n                                <div ref=\"UsersExtra\" style=\"display: inline;\" v-show=\"popupVisible\">\r\n                                    <div class=\"row mt8\">\r\n                                        <label :for=\"'extraAssignTo'+uk\" class=\"labels c1\">Assign To</label>\r\n                                        <vue-multiselect \r\n                                            multiple \r\n                                            class=\"options-list multiselect__tag_bg\" \r\n                                            :id=\"'extraAssignTo'+uk\" \r\n                                            v-model=\"popAssignTo\" \r\n                                            placeholder=\"Select user to assign\" \r\n                                            :options=\"allUsers\" \r\n                                            :custom-label=\"labelForCoordinator\" \r\n                                            track-by=\"id\"\r\n                                        >\r\n                                            <template #noResult>\r\n                                                Oops! No user found. Consider creating new user\r\n                                            </template>\r\n\r\n                                            <template v-slot:option=\"props\">\r\n                                                <span class=\"p0 m0\" :class=\"props.option.isActive == 0 ? 'not-active' : ''\">\r\n                                                    {{props.option.firstName}} {{props.option.lastName}} ({{props.option.id}})\r\n                                                </span>\r\n                                            </template>\r\n                                        </vue-multiselect>\r\n                                    </div>\r\n\r\n                                    <div class=\"row mt8\">\r\n                                        <label class=\"labels c1\" :for=\"'extraStatus'+uk\">Status</label>\r\n                                        <select :id=\"'extraStatus'+uk\" v-model=\"popStatusId\">\r\n                                            <option v-for=\"(status) in subTaskStatuses\" :value=\"status.id\" :key=\"status.id\">\r\n                                                {{status.status}}\r\n                                            </option>\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    <div class=\"row mt8\">\r\n                                        <label class=\"labels c1\" :for=\"'extraCost'+uk\">Cost</label>\r\n                                        <input :id=\"'extraCost'+uk\" v-model=\"popCost\" type=\"number\" placeholder=\"Cost\">\r\n                                    </div>\r\n\r\n                                    <div class=\"row mt8\">\r\n                                        <label class=\"labels c1\" :for=\"'extraComments'+uk\">Comments</label>\r\n                                        <input :id=\"'extraComments'+uk\" v-model=\"popComments\" type=\"text\" placeholder=\"Comments\">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div class=\"row mt8\" v-if=\"rightCheck('see_pricing') == true\">\r\n                                <label :for=\"'task-cost'+uk\" class=\"labels c1\">fees</label>\r\n                                <input type=\"number\" v-model=\"taskCost\" :id=\"'task-cost'+uk\">\r\n                            </div>\r\n\r\n                            <div class=\"row mt8\">\r\n                                <label :for=\"'task-description'+uk\" class=\"labels c1\">description</label>\r\n                                <textarea v-model=\"taskDescription\" name=\"task-description\" :id=\"'task-description'+uk\" cols=\"30\" rows=\"5\" placeholder=\"Description\"></textarea>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div class=\"flex mt16\">\r\n                            <input v-model=\"repeat\" type=\"checkbox\" :id='\"recurring\"+uk' class=\"recurring\">\r\n                            <label :for=\"'recurring'+uk\">recurring</label>\r\n                            <select v-if=\"repeat\" v-model=\"taskRepeat\" :id='\"task-repeat\"+uk' class=\"task-repeat p0 ml8\">\r\n                                <option value=\"year\">every year</option>\r\n                                <option value=\"month\">every month</option>\r\n                                <option value=\"day\">every day</option>\r\n                            </select>\r\n                            <input v-if=\"repeat\" v-model=\"taskRepeatOn\" type=\"date\" :id='\"task-repeat-on\"+uk' class=\"task-repeat p0 pl8 ml8\">\r\n                        </div>\r\n\r\n                        <div class=\"flex mt16\">\r\n                            <input v-model=\"save\" type=\"checkbox\" :id=\"'save-task-template'+uk\" class=\"save-task-template\">\r\n                            <label :for=\"'save-task-template'+uk\">save task template for future use </label>\r\n                        </div>\r\n\r\n                        <button :disabled=\"disabled === true\" @click.prevent=\"proceed()\" class=\"green mt16 button\">save</button>\r\n                        <button :disabled=\"disabled === true\" @click.prevent=\"canceled()\" class=\"neutral ml8 mt16 button\">cancel</button>\r\n                    </form>\r\n                </div>\r\n                <div class=\"vr\"></div>\r\n\r\n                <div class=\"fg pr16 sub-tasks-scroll\">\r\n                    <div>   \r\n                        <div class=\"row mt8 mb16\">\r\n                            <label :for=\"'task-sub-task'+uk\" class=\"labels c1\">sub task</label>\r\n                            <div style=\"width:80%; display:flex; align-items: center;\">\r\n                                <input @keyup.enter=\"addSubTask()\" v-model=\"newSubTask\" style=\"width: 100%\" type=\"text\" :id=\"'task-sub-task'+uk\">\r\n                                <font-awesome-icon tabindex=\"0\" class=\"icon pointer add-st ml8\" @keyup.enter=\"addSubTask()\" @click.prevent=\"addSubTask()\" icon=\"fa-solid fa-plus\"></font-awesome-icon>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div v-if=\"subTasks\" class=\"grid-wrapper\">\r\n                        <div v-for=\"(task, index) in subTasks\" :key=\"index\" class=\"mb8\">\r\n                            <div class=\"grid\" v-if=\"task.description != '_#_*&^'\">\r\n\r\n                                <font-awesome-icon tabindex=\"0\" icon=\"fa-solid fa-minus\"\r\n                                    @keyup.enter=\"removeSubTask(index)\"\r\n                                    @click.prevent=\"removeSubTask(index)\" \r\n                                    class=\"pointer icon rmst\"\r\n                                ></font-awesome-icon>\r\n\r\n                                <div class=\"pointer\"\r\n                                    tabindex=\"0\"\r\n                                    @keyup.enter=\"toggleDisplaySubTask(index)\"\r\n                                    @click.prevent=\"toggleDisplaySubTask(index)\"\r\n                                >\r\n                                    \r\n                                    <p contentEditable=\"true\"\r\n                                        class=\"st-description\"\r\n                                        :class=\"task.statusId == 5 || task.statusId == 6 ? 'done-st' : ''\"\r\n                                        @input=\"updateSubTaskTitle(task, $event)\"\r\n                                    >{{ task.description }}</p>\r\n                                    \r\n                                    <span v-if=\"task?.status != undefined\" class=\"ml8 st_status\" :class=\"task.status\">{{ task.status }}</span>\r\n                                </div>\r\n                                \r\n                                <div style=\"overflow: hidden; display: flex; justify-content: flex-end;\">\r\n                                    <div \r\n                                        v-for=\"(user, index) in task.assignedTo\" :key=\"user.id\" \r\n                                        :style=\"getStyle(task.assignedTo.length - index - 1)\"\r\n                                        style=\"height: 36px; width: 36px; clip-path: circle(); position: relative; background-color: white;\"\r\n                                    >\r\n                                        <font-awesome-icon \r\n                                            v-if=\"$store.getters['images/getProfilePic'](`${user.id}_50x50`) == undefined || \r\n                                            $store.getters['images/getProfilePic'](`${user.id}_50x50`) == ''\"\r\n                                            :key=\"user.id\"\r\n                                            class=\"profile-pic\" style=\"border-radius: 100%; width: 36px; height: 36px;\"\r\n                                            :icon=\"['fas', 'user']\"\r\n                                        ></font-awesome-icon>\r\n\r\n                                        <img v-else :src=\"$store.getters['images/getProfilePic'](`${user.id}_50x50`)\"\r\n                                            loading=\"lazy\" style=\"width: 36px; height: 36px;\"\r\n                                        >\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div v-if=\"task.description != '_#_*&^' && show == index\"\r\n                                class=\"hide ml24\"\r\n                                :class=\"show == index ? 'show' : 'hide'\" \r\n                            >\r\n                                <div class=\"ml16\">\r\n                                    <select v-model=\"task.statusId\" class=\"sub-task-extra\">\r\n                                        <option v-for=\"(status, index) in subTaskStatuses\" :value=\"status.id\" :key=\"index.toString()+uk\">\r\n                                            {{status.status}}\r\n                                        </option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div class=\"ml16\">\r\n                                    <vue-multiselect \r\n                                        multiple \r\n                                        v-model=\"task.assignedTo\" \r\n                                        :options=\"allUsers\" \r\n                                        :custom-label=\"labelForCoordinator\" \r\n                                        track-by=\"id\" \r\n                                        placeholder=\"Assigend To\" \r\n                                        class=\"sub-task-extra options-list multiselect__tag_bg\"\r\n                                    >\r\n                                        <template #noResult>\r\n                                            Oops! No user found. Consider creating new user\r\n                                        </template>\r\n\r\n                                        <template v-slot:option=\"props\">\r\n                                            <span class=\"p0 m0\" style=\"height: 0 !important; width: 0 !important;\" :class=\"props.option.isActive == 0 ? 'not-active' : ''\">\r\n                                                {{props.option.firstName}} {{props.option.lastName}} ({{props.option.id}})\r\n                                            </span>\r\n                                        </template>\r\n                                    </vue-multiselect>\r\n                                </div>\r\n                                \r\n                                <div class=\"ml16\">\r\n                                    <input v-model=\"task.cost\" type=\"number\" :id=\"'sub-task-cost'+uk\" placeholder=\"Cost\" class=\"sub-task-extra\">\r\n                                </div>\r\n\r\n                                <div class=\"ml16\">\r\n                                    <input v-model=\"task.comments\" class=\"sub-task-extra\" type=\"text\" placeholder=\"Comments\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"card hide\" :ref=\"'logs'+uk\">            \r\n            <div class=\"mr16 ml16 mt16\">\r\n                <table>\r\n                    <tr>\r\n                        <th>user</th>\r\n                        <th>action</th>\r\n                        <th style=\"border-right: solid 1px #eeeeee;\">sub-task</th>\r\n                        <th>date</th>\r\n                    </tr>\r\n\r\n                    <tr v-for=\"(logObj, index) in taskData(editTaskId)?.tasksLogs\" :key=\"index\"\r\n                        class=\"tr\">\r\n                        <td>{{logObj.user}}</td>\r\n                        <td>\r\n                            {{(logObj.action + ' ' + logObj.key)}}\r\n                            <span v-if=\"logObj.after != null\">\r\n                                to {{logObj.after}}\r\n                            </span>\r\n                            <span v-if=\"(logObj.before != null)\">\r\n                                from {{logObj.before}}\r\n                            </span>\r\n                        </td>\r\n                        <td style=\"border-right: solid 1px #eeeeee;\">{{logObj?.subTask != '_#_*&^' && logObj?.subTask ? logObj.subTask : \"Not Available\"}}</td>\r\n                        <td>{{ new Date(logObj.timestamp).toLocaleString() }}</td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import swal from 'sweetalert'\r\n    import { mapGetters } from 'vuex'\r\n    import { tasks, subTasksMaster } from '@/api/index.js'\r\n    import useEditSwal from '../helpers/swalEdit'\r\n    import useCreateSwal from '@/helpers/swalCreate'\r\n    import VueMultiselect from 'vue-multiselect'\r\n    import rightCheck from '@/helpers/RightCheck'\r\n\r\n    export default {\r\n        name: 'TasksCreate',\r\n        props: ['editTaskId', 'uk'],\r\n        components: {\r\n            VueMultiselect,\r\n        },\r\n        data() {\r\n            return {\r\n                editing: false,\r\n                subTaskStatuses: [{id: 1, status: \"hold\"}, {id: 2, status: \"to do\"}, {id: 3, status: \"in progress\"}, {id: 4, status: \"pending for approval\"}, {id: 5, status: \"done\"}, {id: 6, status: \"cancel\"}, {id: 7, status: \"pending with client\"}, {id: 8, status: \"signed documents awaited\"}, {id: 9, status: \"pending for DSC\"}, {id: 10, status: 'reassigned'}, {id: 11, status: 'approved'}, {id: 12, status: \"Pending before authority\"}],\r\n                \r\n                subTasks: [],\r\n                removedSubTasksId: [],\r\n\r\n                taskMasterId: '',\r\n                repeat: false,\r\n                newSubTask: '',\r\n\r\n                taskTitle: '',\r\n                taskDescription: '',\r\n                taskClient: '',\r\n                taskCost: '',\r\n                taskCoordinator: [],\r\n                save: false,\r\n                taskRepeat: '',\r\n                taskRepeatOn: '',\r\n                clientContact: '',\r\n\r\n                taskLogs: [],\r\n                disabled: false,\r\n\r\n                i:0,\r\n                show: -1,\r\n\r\n                popupVisible: false,\r\n                popAssignTo: [],\r\n                popComments: '',\r\n                popCost: '',\r\n                popStatusId: '',\r\n\r\n                unqId: 0\r\n            }\r\n        },\r\n        computed: {\r\n            ...mapGetters('tasks', [\r\n                'taskData',\r\n                'subTasksData',\r\n                'tasksMasterListGet'\r\n            ]),\r\n            ...mapGetters('users', [\r\n                'allUsers'\r\n            ]),\r\n            ...mapGetters('clients', [\r\n                'clientsGetConfirmed'\r\n            ]),\r\n        },\r\n        watch: {\r\n            taskMasterId(taskMasterId, oldTaskMasterId) {\r\n                if (oldTaskMasterId == '') oldTaskMasterId = undefined\r\n                if (taskMasterId == '') taskMasterId = undefined\r\n\r\n                if (this.i != 0) {\r\n                    //while editing place all sub-tasks to be removed\r\n                    if (this.editing == true) {\r\n                        let removeSubTasksId = this.subTasks?.map(st => st?.id)\r\n                        if (removeSubTasksId?.length != 0) this.removedSubTasksId?.push(...removeSubTasksId)\r\n                    }\r\n                    //fetch sub-task of selected taskMaster\r\n                    this.taskMasterSelected(taskMasterId?.id)\r\n                }\r\n                else if (this.i == 0) {\r\n                    if (this.editing != true) {\r\n                        this.taskMasterSelected(taskMasterId?.id)\r\n                    }\r\n                    else {\r\n                        ++this.i\r\n                    }\r\n                }\r\n            },\r\n        },\r\n        methods: {\r\n            rightCheck,\r\n            getStyle(index) {\r\n                return `left: ${8*(index)}px;`;\r\n            },\r\n            labelForCoordinator({firstName, lastName, id}) {\r\n                return `${firstName} ${lastName} (${id})`\r\n            },\r\n            labelForClient({name, id}) {\r\n                return `${name} (${id})`\r\n            },\r\n            labelForTaskMaster({title, id}) {\r\n                return `${title} (${id})`\r\n            },\r\n            taskMasterSelected(taskMasterId) {\r\n                if (taskMasterId?.id) taskMasterId = taskMasterId.id\r\n                if (taskMasterId == undefined) {\r\n                    this.taskCost = ''\r\n                    this.subTasks = []\r\n                    return\r\n                }\r\n\r\n                ++this.i\r\n                const selectedTaskMaster = this['tasksMasterListGet'].find((o) => o.id == taskMasterId)\r\n                subTasksMaster.get({taskMasterId})\r\n                .then((results) => {\r\n                    this.subTasks = results.data.subTasksMasterList\r\n                    this.taskCost = selectedTaskMaster?.cost\r\n                })\r\n            },\r\n            openTab(e, newTab) {\r\n                var tabs = e.target.parentElement.getElementsByClassName('tab')\r\n                let curTab = [...tabs].find(tab => tab?.classList?.contains('tab-open') == true)\r\n                curTab?.classList?.remove('tab-open')\r\n                e?.target?.classList?.add('tab-open')\r\n                this.$refs['details'+this.uk]?.classList?.add('hide')\r\n                this.$refs['logs'+this.uk]?.classList?.add('hide')\r\n                this.$refs[newTab+this.uk]?.classList?.remove('hide')\r\n                this.$refs['details'+this.uk+'focus'].focus()\r\n            },\r\n            addSubTask() {\r\n                ++this.unqId\r\n                this.subTasks.push({\r\n                    unqId: this.unqId,\r\n                    description: this.newSubTask,\r\n                    statusId: 2,\r\n                    assignedTo: [],\r\n                    comments: '',\r\n                    cost: '',\r\n                })\r\n                document.getElementById('task-sub-task'+this.uk).focus()\r\n                this.newSubTask = ''\r\n\r\n                if (this.subTasks?.length == 0 || ( this.subTasks.length == 1 && this.subTasks[0].description == '_#_*&^')) {\r\n                    this.popupVisible = true\r\n                }\r\n                else this.popupVisible = false\r\n            },\r\n            removeSubTask(index) {\r\n                const rmSubTask = this.subTasks.splice(index, 1)\r\n                if (rmSubTask[0]?.id) {\r\n                    this.removedSubTasksId.push(rmSubTask[0]?.id)\r\n                }\r\n                if (this.subTasks?.length == 0 || ( this.subTasks.length == 1 && this.subTasks[0].description == '_#_*&^')) {\r\n                    this.popupVisible = true\r\n                }\r\n                else this.popupVisible = false\r\n            },\r\n            updateSubTaskTitle(task, e) {\r\n                for(let i = 0; i!=this.subTasks.length; i++) {\r\n                    if (((this.subTasks[i]?.id == task.id) && task.id != undefined) || \r\n                        ((this.subTasks[i]?.unqId == task.unqId) && task.unqId != undefined)\r\n                    ) {\r\n                        this.subTasks[i].description = e.target.innerText\r\n                    }\r\n                }\r\n            },\r\n            toggleDisplaySubTask(index) {\r\n                if (this.show == index) this.show = -1\r\n                else this.show = index\r\n            },\r\n            populateDataProperties(data) {\r\n                const {\r\n                    taskMasterId,\r\n                    title,\r\n                    description,\r\n                    cost,\r\n                    clientId,\r\n                } = data\r\n\r\n                const coordinatorIds = JSON.parse(data.coordinatorIds)\r\n\r\n                const clientData = this.clientsGetConfirmed.find(client => client.id == clientId)\r\n                this.taskTitle = title\r\n                this.taskDescription = description\r\n                this.taskCost = cost\r\n                \r\n                if(coordinatorIds?.[0] !== null) {\r\n                    this.taskCoordinator = coordinatorIds?.map((coordinatorId) => {\r\n                        return this.allUsers.find(user => user.id == coordinatorId)\r\n                    })\r\n                }\r\n\r\n                this.taskClient = clientData\r\n                this.taskMasterId = this.tasksMasterListGet.find(task => task.id == taskMasterId)\r\n                this.clientContact = clientData\r\n            },\r\n            proceed() {\r\n                this.disabled = true\r\n\r\n                this.subTasks?.map((subTask) => {\r\n                    if(subTask.assignedTo?.length > 0) {\r\n                        subTask.assignedTo = subTask.assignedTo.map((user) => {\r\n                            if (user?.id) return user.id\r\n                            else return user\r\n                        })\r\n                    }\r\n                })\r\n\r\n                this.taskCoordinator = \r\n                    this.taskCoordinator?.length > 0 ?\r\n                    \r\n                    this.taskCoordinator?.map((userObj) => {\r\n                        if (userObj?.id) return userObj.id\r\n                    })\r\n                    :\r\n                    []\r\n                \r\n                let args = {\r\n                    saved: new Number(this.save),\r\n                    taskId: this.editTaskId,\r\n                    taskMasterId: this.taskMasterId,\r\n                    title: this.taskTitle,\r\n                    description: this.taskDescription,\r\n                    cost: this.taskCost,\r\n                    clientId: this.taskClient,\r\n                    coordinatorIds: JSON.stringify(this.taskCoordinator),\r\n                    subTasks: JSON.stringify(this.subTasks),\r\n                    removedSubTasks: JSON.stringify(this.removedSubTasksId),\r\n                }\r\n\r\n                let p\r\n\r\n                if (this.subTasks?.length == 0 && this.popAssignTo.length === 0 && this.popComments == '' && this.popCost == '' && this.popStatusId == '') {\r\n                    this.popupVisible = true\r\n\r\n                    p = swal({\r\n                        content: this.$refs['UsersExtra'],\r\n                        buttons: true\r\n                    })\r\n                    .then((value) => {\r\n                        if (value == null) throw null\r\n                        else {\r\n                            return {\r\n                                assignedTo: this.popAssignTo.map(user => {\r\n                                    if(user?.id) return user.id\r\n                                }),\r\n                                cost: this.popCost,\r\n                                comments: this.popComments,\r\n                                statusId: this.popStatusId\r\n                            }\r\n                        }\r\n                    })\r\n                    .then((value) => {\r\n                        this.subTasks = [{\r\n                            description: '_#_*&^',\r\n                            assignedTo: value.assignedTo,\r\n                            statusId: value.statusId || 2,\r\n                            comments: value.comments,\r\n                            cost: value.cost,\r\n                        }]\r\n                        args.subTasks = JSON.stringify(this.subTasks)\r\n                    })\r\n                }\r\n                else if (this.subTasks?.length == 1 && this.subTasks[0]?.description == '_#_*&^') {\r\n                    this.subTasks[0].assignedTo = this.popAssignTo.map((user) => {\r\n                        if(user?.id) return user.id\r\n                    })\r\n                    this.subTasks[0].comments = this.popComments\r\n                    this.subTasks[0].statusId = this.popStatusId || 2\r\n                    this.subTasks[0].cost = this.popCost\r\n                    args.subTasks = JSON.stringify(this.subTasks)\r\n\r\n                    p = Promise.resolve()\r\n                }\r\n                else {\r\n                    p = Promise.resolve()\r\n                }\r\n                \r\n                if (args.clientId?.id) {\r\n                    args.clientId = args.clientId?.id\r\n                }\r\n                if (args.taskMasterId?.id) {\r\n                    args.taskMasterId = args.taskMasterId.id\r\n                }\r\n\r\n                p.then(() => {\r\n                    // let args = args\r\n                    // args.subTasks = subTasksRaw\r\n\r\n                    if (this.editing == true ) {\r\n                        useEditSwal({\r\n                            text: args.title,\r\n                            mutationFnName: 'tasks/refetch',\r\n                            mutationArgs: {saved: args.saved, taskId: args.taskId},\r\n                            promise: tasks.edit(args),\r\n                            context: this,\r\n                        })\r\n                    }\r\n                    else {\r\n                        useCreateSwal({\r\n                            text: args.title,\r\n                            mutationFnName: 'tasks/refetch',\r\n                            mutationArgs: {saved: args.saved},\r\n                            url: '/u/tasks/list',\r\n                            promise: tasks.create(args),\r\n                            context: this\r\n                        })\r\n                    } \r\n                })\r\n                .catch(err => {\r\n                    if (err == null) this.canceled()\r\n                })\r\n                this.$store.commit('myTasks/refetch')\r\n            },\r\n            canceled() {\r\n                if (this.editing == true) this.$emit(\"editingCompleted\", {force: true})\r\n                else this.$router.push('/u/tasks/list')\r\n            }\r\n        },\r\n        created() {\r\n            //get all clients if not in store\r\n            this.$store.dispatch('clients/clientsGetConfirmed'),\r\n            \r\n            //get all tasksMaster if not in store\r\n            this.$store.dispatch('tasks/tasksMasterListSet'),\r\n            \r\n            //get all users if not in store \r\n            this.$store.dispatch('users/usersAll')\r\n\r\n            if (window.history.state.taskId != undefined){ \r\n                this.editing = true  \r\n            }\r\n            else if (this.editTaskId != undefined) {\r\n                this.editing = true\r\n            }\r\n        },\r\n        mounted() {\r\n            if (this.editing == true) {\r\n                const taskData = (this['taskData'])(this.editTaskId)?.taskData?.[0]\r\n                const taskLogs = (this['taskData'])(this.editTaskId)?.taskLogs\r\n                const subTasksData = this['subTasksData'](this.editTaskId)\r\n                if (taskData !== undefined && taskData !== '') {\r\n                    this.populateDataProperties(taskData)\r\n                    this.taskLogs = taskLogs\r\n                }\r\n                if (subTasksData !== undefined && subTasksData !== '') {  \r\n                    this.unqId = subTasksData.length    \r\n\r\n                    for(let i = 0; i<subTasksData.length; i++) {\r\n                        if (typeof subTasksData[i].assignedTo?.[0] === \"number\") {\r\n                            subTasksData[i].assignedTo = subTasksData[i].assignedTo.map(userId => {\r\n                                return this.allUsers.find(user => user.id == userId)\r\n                            })\r\n                        }\r\n                        else if (subTasksData[i].assignedTo === null ) subTasksData[i].assignedTo = []\r\n                    }\r\n                    this.subTasks = subTasksData\r\n                }\r\n\r\n                if (this.subTasks?.length === 1) {\r\n                    if (this.subTasks[0].description == '_#_*&^') {\r\n                        this.popupVisible = true\r\n                        this.popAssignTo = this.subTasks[0].assignedTo,\r\n                        this.popComments = this.subTasks[0].comments\r\n                        this.popCost = this.subTasks[0].cost\r\n                        this.popStatusId = this.subTasks[0].statusId\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.$refs['defaultTab'+this.uk].click()\r\n        },\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n@import \"../assets/stylesheet/multiselect.css\";\r\n.st-description {\r\n    display: inline;\r\n}\r\n.st-description:focus {\r\n    outline: none !important;\r\n    border-bottom: solid 1px #e0e0e0;\r\n}\r\n.st_status {\r\n    border: solid 1px #e0e0e0;\r\n    color:#e0e0e0;\r\n    border-radius: 50px 50px;\r\n    padding: 0 6px;\r\n    text-align: center;\r\n    white-space: nowrap;\r\n}\r\n\r\nsvg.profile-pic {\r\n    width: 30px;\r\n    height: 26px;\r\n    padding-bottom: 4px;\r\n    color: #e0e0e0;\r\n    border-radius: 100%;\r\n    border: solid 1px #e0e0e0;\r\n}\r\n.done-st {\r\n    color: #a0a0a0;\r\n    text-decoration: line-through;\r\n}\r\n.add-st {\r\n    width: 13px;\r\n    height: 13px;\r\n    padding: 8px;\r\n}\r\n.rmst {\r\n    padding: 4px;\r\n}\r\n.icon {\r\n    border-radius: 100%;\r\n    color: #8888888f;\r\n    border: solid 1px #e0e0e0;\r\n}\r\n.icon:hover {\r\n    border-color: #c2c2c2;\r\n}\r\n.pointer {\r\n    cursor: pointer;\r\n}\r\noption, select {\r\n    text-transform: capitalize;\r\n}\r\n.table-tabs {\r\n    display: flex;\r\n}\r\n.tab {\r\n    padding: auto;\r\n    width: 50%;\r\n    background-color: white;\r\n    border-radius: 0;\r\n}\r\n.tab-open {\r\n    border: solid 1px #d2d2d2;\r\n    color:  #e7eaec;\r\n    background-color: #2F4050;\r\n}\r\n.save-task-template, .recurring {\r\n    width: fit-content !important;\r\n}\r\n.hide {display: none;}\r\n.show {\r\n    display: block !important;\r\n}\r\n.labels {\r\n    align-self: center;\r\n}\r\n.sub-task-extra {\r\n    width: 80% !important;\r\n    border: none !important;\r\n    border-bottom: solid 1px #e7eaec !important;\r\n}\r\n.sub-task-extra:focus {\r\n    border: none !important;\r\n    outline-color: #e7eaec;\r\n}\r\n.grid-wrapper {\r\n    width: 100%;\r\n}\r\n.grid {\r\n    display: grid;\r\n    grid-template-columns: 25px auto auto;\r\n    grid-template-rows: 2;\r\n    column-gap: 12px;\r\n    align-items: center;\r\n    line-height: 1.5rem;\r\n}\r\n.grid:hover .dots-img {\r\n    visibility: visible !important;\r\n}\r\n.flex {\r\n    display: flex;\r\n    column-gap: 12px;\r\n    align-items: center;\r\n}\r\n.task-repeat {\r\n    width: fit-content;\r\n    border: none;\r\n    border-bottom: solid 1px #e7eaec;\r\n}\r\n.sub-tasks-scroll {\r\n    max-height: 720px;\r\n    overflow-y: auto;\r\n}\r\n</style>","import { render } from \"./TasksCreate.vue?vue&type=template&id=cec64974&scoped=true\"\nimport script from \"./TasksCreate.vue?vue&type=script&lang=js\"\nexport * from \"./TasksCreate.vue?vue&type=script&lang=js\"\n\nimport \"./TasksCreate.vue?vue&type=style&index=0&id=cec64974&scoped=true&lang=css\"\n\nimport exportComponent from \"D:\\\\portal\\\\frontend\\\\portal\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-cec64974\"]])\n\nexport default __exports__","import store from \"@/store\";\r\n\r\nexport default function rightCheck(wantedRight) {\r\n    const userRights = store.getters['rights/getUserRights']\r\n    const allow = userRights?.some((right) => right.code_name == wantedRight)\r\n    return allow\r\n}","export default function useCreateSwal({text, url, mutationFnName, mutationArgs, promise, context}) {\r\n    let args = mutationArgs\r\n    if (args == undefined) args = {}\r\n\r\n    promise\r\n    .then(() =>\r\n        context.$toast.success(`saved ${text}`)\r\n    )\r\n    .then(() => { \r\n        if (mutationFnName) context.$store.commit(mutationFnName, args)\r\n        setTimeout(() => context.$router.push(url), 1)\r\n    })\r\n    .catch((err) => {\r\n        if (err != null) context.$toast.error(`Oops! We can't perform this action right now`)\r\n    })\r\n    .finally(() => {\r\n        context.disabled = false\r\n    })\r\n}","import store from '@/store/index.js'\r\n\r\nexport default function useEditSwal({text, mutationFnName, mutationArgs, promise, context}) {\r\n    promise\r\n    .then(() => {\r\n        if (mutationFnName) store.commit(mutationFnName, mutationArgs)\r\n        context.$emit('editingCompleted', {}) //to toggle hidden-tr\r\n        context.$toast.success(`Saved ${text}`)\r\n    })\r\n    .catch((err) =>{ \r\n        if (err != null) return context.$toast.error(`Oops! We can't perform this action right now`)\r\n    })\r\n    .finally(() => {\r\n        context.disabled = false\r\n        if (context?.polling != undefined) context.polling = true\r\n    })\r\n}"],"names":["class","ref","style","value","openTab","$event","uk","for","type","id","taskTitle","taskClient","options","clientsGetConfirmed","labelForClient","placeholder","noResult","multiple","taskCoordinator","allUsers","labelForCoordinator","option","props","isActive","firstName","lastName","taskMasterId","tasksMasterListGet","labelForTaskMaster","clientContact","conEmail","disabled","conPhone","popAssignTo","subTaskStatuses","status","key","popStatusId","popCost","popComments","popupVisible","editing","rightCheck","taskCost","name","cols","rows","taskDescription","repeat","taskRepeat","taskRepeatOn","save","proceed","canceled","addSubTask","newSubTask","tabindex","icon","subTasks","task","index","description","removeSubTask","toggleDisplaySubTask","contentEditable","statusId","updateSubTaskTitle","undefined","assignedTo","user","getStyle","length","$store","getters","src","loading","show","toString","cost","comments","taskData","editTaskId","tasksLogs","logObj","action","after","before","subTask","Date","timestamp","toLocaleString","components","VueMultiselect","data","removedSubTasksId","taskLogs","i","unqId","computed","watch","oldTaskMasterId","this","removeSubTasksId","map","st","push","taskMasterSelected","methods","title","selectedTaskMaster","find","o","then","results","subTasksMasterList","e","newTab","tabs","target","parentElement","getElementsByClassName","curTab","tab","classList","contains","remove","add","$refs","focus","document","getElementById","rmSubTask","splice","innerText","populateDataProperties","clientId","coordinatorIds","JSON","parse","clientData","client","coordinatorId","userObj","p","args","saved","Number","taskId","stringify","removedSubTasks","content","buttons","Promise","resolve","text","mutationFnName","mutationArgs","promise","context","url","catch","err","commit","$emit","force","$router","created","dispatch","window","history","state","mounted","subTasksData","userId","click","__exports__","render","wantedRight","userRights","allow","some","right","code_name","useCreateSwal","$toast","success","setTimeout","error","finally","useEditSwal","polling"],"sourceRoot":""}